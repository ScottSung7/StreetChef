package 미션들;

import java.util.List;

import A_시나리오.시나리오;
import 상권.아이템들.식재료들.식재료;
import 캐릭터들.집안.주인공;

public class 미션보드{
	
	
	int 요리평점;	boolean 서빙결과;
	미션 진행중_미션;
	public 미션보드_정보 정보 = new 미션보드_정보();
	미션보드_기본 미션보드_기본 = new 미션보드_기본();
	public 미션보드_일반 미션보드_일반 = new 미션보드_일반();
	boolean 대결중;
	
	public 미션보드(){
		
	}


	public void 미션_선택(주인공 주인공) {
		
		대결중 = false;
		try {
			
			switch(미션_선택_시나리오()) {
				case 1: 진행중_미션 = 미션보드_기본.기본_미션_선택(주인공); break;
				case 2: 진행중_미션 = (미션보드_기본.총_성공여부() ? 미션보드_일반.일반_미션_선택(주인공) : 미션보드_일반.일반_미션_선택(주인공)); break;
				case 3: 미션내역(주인공); break;
				case 4: 시나리오.돌아가기(주인공); break;
			}
			if(진행중_미션 != null) {
			
				시나리오.출력("선택된 미션 : "+ 진행중_미션.get미션이름());
				Thread.sleep(1000);
				미션체크_세팅(주인공);
				if(진행중_미션.대결 == true) {
					시나리오.음악(6,60000);
					대결중 = true;
					진행중_미션.대결(주인공);
				}
				
			}
			
			
		}
		catch(Exception e){
			e.printStackTrace();
			시나리오.첫줄("이전 미션을 먼저 성공 후 시도해 주세요.");
			시나리오.엔터();
			미션_선택(주인공);
			
		}
	}
	private int 미션_선택_시나리오() {
		
		시나리오.첫줄("미션 종류를 선택해 주세요.\n");
		시나리오.출력("1. 기본미션");
		시나리오.출력("2. 일반미션 ");
		시나리오.출력("3. 미션 달성 내역");
		시나리오.출력("4. 돌아가기 ");
		시나리오.한줄("선택: ");
		return 시나리오.선택();
	}
	
	private void 미션내역(주인공 주인공) {
		시나리오.출력("========================================");
		시나리오.첫줄("미션 달성 내역");
		시나리오.출력("");
		시나리오.출력("기본미션1 : " + 미션보드_기본.미션1.get미션내용() + " ("+(미션보드_기본.미션1.get성공여부() ? "성공" : "미달성")+")");
		시나리오.출력("기본미션2 : " + 미션보드_기본.미션2.get미션내용() + " ("+(미션보드_기본.미션2.get성공여부() ? "성공" : "미달성")+")");
		시나리오.출력("기본미션3 : " + 미션보드_기본.미션3.get미션내용() + " ("+(미션보드_기본.미션3.get성공여부() ? "성공" : "미달성")+")");
		시나리오.출력("기본미션4 : " + 미션보드_기본.미션4.get미션내용() + " ("+(미션보드_기본.미션4.get성공여부() ? "성공" : "미달성")+")");
		시나리오.출력("기본미션5 : " + 미션보드_기본.미션5.get미션내용() + " ("+(미션보드_기본.미션5.get성공여부() ? "성공" : "미달성")+")");
		시나리오.출력("");
		시나리오.출력("일반미션1 : " + 미션보드_일반.미션A.get미션내용() + " ("+(미션보드_일반.미션A.get성공여부() ? "성공" : "미달성")+")");
		시나리오.출력("일반미션2 : " + 미션보드_일반.미션B.get미션내용() + " ("+(미션보드_일반.미션B.get성공여부() ? "성공" : "미달성")+")");
		시나리오.출력("일반미션3 : " + 미션보드_일반.미션C.get미션내용() + " ("+(미션보드_일반.미션C.get성공여부() ? "성공" : "미달성")+")");
		시나리오.출력("일반미션4 : " + 미션보드_일반.미션D.get미션내용() + " ("+(미션보드_일반.미션D.get성공여부() ? "성공" : "미달성")+")");
		
		시나리오.엔터();
		미션_선택(주인공);
	}
	//====================================
	public void 미션체크_세팅(주인공 주인공) {
		
		Thread thread3 = new Thread(()->{
			boolean 미션_성공여부 = false; 
			while(!미션_성공여부) {
			
				시나리오.스레드_잠자기_도우미();
				
				미션_성공여부 = 진행중_미션.미션체크(정보);
				
				if(미션_성공여부) {
					
						
					진행중_미션.미션_보상(주인공);
					시나리오.출력("미션 완료 : "+ 주인공.미션보드.진행중_미션.get미션이름() +" - " + 주인공.미션보드.진행중_미션.get미션내용());
					시나리오.출력("미션 결과 : " + (진행중_미션.get성공여부() ? "성공" : "실패"));
					주인공.미션보드.진행중_미션 = null;
					대결중 = false;
					
					break;
					
				}
				
			}
		});
		
		thread3.start();
		
	}
	//================
	public void 정보체크(주인공 주인공) {
		Thread thread2 = new Thread(()->{
			while(true) {
				
				정보.팬_여부 = 주인공.팬_여부_리턴();
				정보.화구_여부 = 주인공.화구_여부_리턴();
				정보.직원_여부 = (boolean)((int)주인공.get보유_식재료().size() > 0 ? true : false);
				정보.평점 = 주인공.show평판();
				
				시나리오.스레드_잠자기_도우미();
				
			}
		});
		thread2.start();
	}
	public Thread 대결(주인공 주인공) {
		
		Thread thread4 = new Thread(()->{
			
			진행중_미션.대결(주인공);
			
		});
		
		return thread4;
		
	}
	
	//출력
	public void 진행상태() {
		
		if(진행중_미션 == null) {
			시나리오.첫줄("진행 중 미션이 없습니다."); return;
		}
		switch(진행중_미션.get미션타입()) {
			case "기본미션" : 미션보드_기본.진행상태(진행중_미션.get미션번호()); break;}
		
		}
	//====================================
	public int get요리평점() {
		return 요리평점;
	}
	public boolean is서빙결과() {
		return 서빙결과;
	}
	public 미션 get진행중_미션() {
		return 진행중_미션;
	}
	public boolean get대결중() {
		return 대결중;
	}
	public void set진행중_미션(미션 미션) {
		this.진행중_미션 = 미션;
	}

	
	
	
	//후기
	
	
	
}
